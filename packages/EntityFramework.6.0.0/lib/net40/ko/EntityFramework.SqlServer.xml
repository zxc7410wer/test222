<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>EntityFramework.SqlServer</name>
  </assembly>
  <members>
    <member name="T:System.Data.Entity.SqlServer.SqlAzureExecutionStrategy">
      <summary>SQL Azure의 일시적인 오류로 인해 발생한 예외를 throw하는 동작을 재시도하는 <see cref="T:System.Data.Entity.Infrastructure.IDbExecutionStrategy" />입니다.</summary>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlAzureExecutionStrategy.#ctor">
      <summary>
        <see cref="T:System.Data.Entity.SqlServer.SqlAzureExecutionStrategy" />의 새 인스턴스를 만듭니다.</summary>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlAzureExecutionStrategy.#ctor(System.Int32,System.TimeSpan)">
      <summary>재시도 횟수의 지정된 제한과 재시도 간의 지연을 사용하여 <see cref="T:System.Data.Entity.SqlServer.SqlAzureExecutionStrategy" />의 새 인스턴스를 만듭니다.</summary>
      <param name="maxRetryCount">최대 재시도 횟수입니다.</param>
      <param name="maxDelay">재시도 간의 최대 지연(밀리초)입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlAzureExecutionStrategy.ShouldRetryOn(System.Exception)">
      <summary>지정된 예외가 다시 시도되어야 하는지 여부를 확인합니다.</summary>
      <returns>지정된 예외가 다시 시도되어야 하면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="exception">다시 시도할 예외입니다.</param>
    </member>
    <member name="T:System.Data.Entity.SqlServer.SqlFunctions">
      <summary>LINQ to Entities에서 SqlServer 메서드를 노출하는 함수 스텁을 포함합니다.</summary>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Acos(System.Nullable{System.Decimal})">
      <summary>지정된 숫자 값이 코사인과 일치하는 각도를 라디안으로 반환하는 수학 함수입니다.이 각도를 아크코사인이라고 합니다.</summary>
      <returns>라디안 단위의 각도입니다.</returns>
      <param name="arg1">각도의 코사인입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Acos(System.Nullable{System.Double})">
      <summary>지정된 숫자 값이 코사인과 일치하는 각도를 라디안으로 반환하는 수학 함수입니다.이 각도를 아크코사인이라고 합니다.</summary>
      <returns>입력 코사인 값으로 정의된 각도(라디안)입니다.</returns>
      <param name="arg1">각도의 코사인입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Ascii(System.String)">
      <summary>문자 식에서 가장 왼쪽 문자의 ASCII 코드 값을 반환합니다.</summary>
      <returns>입력 문자열에 있는 첫 번째 문자의 ASCII 코드입니다.</returns>
      <param name="arg">유효한 문자열입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Asin(System.Nullable{System.Decimal})">
      <summary>지정된 숫자 값이 사인과 일치하는 각도를 라디안으로 반환하는 수학 함수입니다.이 각도를 아크사인이라고 합니다.</summary>
      <returns>라디안 단위의 각도입니다.</returns>
      <param name="arg">각도의 사인입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Asin(System.Nullable{System.Double})">
      <summary>지정된 숫자 값이 사인과 일치하는 각도를 라디안으로 반환하는 수학 함수입니다.이 각도를 아크사인이라고 합니다.</summary>
      <returns>라디안 단위의 각도입니다.</returns>
      <param name="arg">각도의 사인입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Atan(System.Nullable{System.Decimal})">
      <summary>지정된 숫자 값이 탄젠트와 일치하는 각도를 라디안으로 반환하는 수학 함수입니다.이 각도를 아크탄젠트라고 합니다.</summary>
      <returns>라디안 단위의 각도입니다.</returns>
      <param name="arg">각도의 탄젠트입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Atan(System.Nullable{System.Double})">
      <summary>지정된 숫자 값이 탄젠트와 일치하는 각도를 라디안으로 반환하는 수학 함수입니다.이 각도를 아크탄젠트라고 합니다.</summary>
      <returns>라디안 단위의 각도입니다.</returns>
      <param name="arg">각도의 탄젠트입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Atan2(System.Nullable{System.Decimal},System.Nullable{System.Decimal})">
      <summary>x축 양의 방향과 원점에서 시작하여 점 (x, y)를 지나가는 선 사이의 양의 각도를 라디안으로 반환합니다. 여기에서 x와 y는 지정된 두 숫자 값입니다.함수에 전달되는 첫 번째 매개 변수는 y 값이고 두 번째 매개 변수는 x 값입니다.</summary>
      <returns>라디안 단위의 각도입니다.</returns>
      <param name="arg1">점의 y 좌표입니다.</param>
      <param name="arg2">점의 x 좌표입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Atan2(System.Nullable{System.Double},System.Nullable{System.Double})">
      <summary>x축 양의 방향과 원점에서 시작하여 점 (x, y)를 지나가는 선 사이의 양의 각도를 라디안으로 반환합니다. 여기에서 x와 y는 지정된 두 숫자 값입니다.함수에 전달되는 첫 번째 매개 변수는 y 값이고 두 번째 매개 변수는 x 값입니다.</summary>
      <returns>라디안 단위의 각도입니다.</returns>
      <param name="arg1">점의 y 좌표입니다.</param>
      <param name="arg2">점의 x 좌표입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Char(System.Nullable{System.Int32})">
      <summary>지정된 정수 ASCII 값에 해당하는 문자를 반환합니다.</summary>
      <returns>지정된 ASCII 값에 해당하는 문자입니다.</returns>
      <param name="arg">ASCII 코드입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.CharIndex(System.Byte[],System.Byte[])">
      <summary>다른 식의 내부에 있는 하나의 식의 시작 위치를 반환합니다.</summary>
      <returns>toSearch에 있는 경우 이 대상의 시작 위치입니다.</returns>
      <param name="toSearch">검색할 문자열 식입니다.</param>
      <param name="target">찾을 문자열 식입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.CharIndex(System.Byte[],System.Byte[],System.Nullable{System.Int32})">
      <summary>다른 식의 내부에 있는 하나의 식의 시작 위치를 반환합니다.</summary>
      <returns>toSearch에 있는 경우 이 대상의 시작 위치입니다.</returns>
      <param name="toSearch">검색할 문자열 식입니다.</param>
      <param name="target">찾을 문자열 식입니다.</param>
      <param name="startLocation">toSearch에서 검색이 시작되는 문자 위치입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.CharIndex(System.Byte[],System.Byte[],System.Nullable{System.Int64})">
      <summary>다른 식의 내부에 있는 하나의 식의 시작 위치를 반환합니다.</summary>
      <returns>toSearch에 있는 경우 이 대상의 시작 위치입니다.</returns>
      <param name="toSearch">검색할 문자열 식입니다.</param>
      <param name="target">찾을 문자열 식입니다.</param>
      <param name="startLocation">toSearch에서 검색이 시작되는 문자 위치입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.CharIndex(System.String,System.String)">
      <summary>다른 식의 내부에 있는 하나의 식의 시작 위치를 반환합니다.</summary>
      <returns>toSearch에 있는 경우 이 대상의 시작 위치입니다.</returns>
      <param name="toSearch">검색할 문자열 식입니다.</param>
      <param name="target">찾을 문자열 식입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.CharIndex(System.String,System.String,System.Nullable{System.Int32})">
      <summary>다른 식의 내부에 있는 하나의 식의 시작 위치를 반환합니다.</summary>
      <returns>toSearch에 있는 경우 이 대상의 시작 위치입니다.</returns>
      <param name="toSearch">검색할 문자열 식입니다.</param>
      <param name="target">찾을 문자열 식입니다.</param>
      <param name="startLocation">toSearch에서 검색이 시작되는 문자 위치입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.CharIndex(System.String,System.String,System.Nullable{System.Int64})">
      <summary>다른 식의 내부에 있는 하나의 식의 시작 위치를 반환합니다.</summary>
      <returns>toSearch에 있는 경우 이 대상의 시작 위치인 <see cref="T:System.Int64" /> 값의 <see cref="T:System.Nullable`1" />입니다.</returns>
      <param name="toSearch">검색할 문자열 식입니다.</param>
      <param name="target">찾을 문자열 식입니다.</param>
      <param name="startLocation">toSearch에서 검색이 시작되는 문자 위치입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Byte[])">
      <summary>입력 인수를 사용하여 계산된 체크섬 값을 반환합니다.</summary>
      <returns>입력 값을 사용하여 계산된 체크섬입니다.</returns>
      <param name="arg1">체크섬이 계산되는 문자 배열입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Byte[],System.Byte[])">
      <summary>입력 인수를 사용하여 계산된 체크섬 값을 반환합니다.</summary>
      <returns>입력 값을 사용하여 계산된 체크섬입니다.</returns>
      <param name="arg1">체크섬이 계산되는 문자 배열입니다.</param>
      <param name="arg2">체크섬이 계산되는 문자 배열입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Byte[],System.Byte[],System.Byte[])">
      <summary>입력 인수를 사용하여 계산된 체크섬 값을 반환합니다.</summary>
      <returns>입력 값을 사용하여 계산된 체크섬입니다.</returns>
      <param name="arg1">체크섬이 계산되는 문자 배열입니다.</param>
      <param name="arg2">체크섬이 계산되는 문자 배열입니다.</param>
      <param name="arg3">체크섬이 계산되는 문자 배열입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.Boolean})">
      <summary>입력 인수를 사용하여 계산된 체크섬 값을 반환합니다.</summary>
      <returns>입력 값을 사용하여 계산된 체크섬입니다.</returns>
      <param name="arg1">체크섬을 계산할 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
      <summary>입력 인수를 사용하여 계산된 체크섬 값을 반환합니다.</summary>
      <returns>입력 값을 사용하여 계산된 체크섬입니다.</returns>
      <param name="arg1">체크섬을 계산할 값입니다.</param>
      <param name="arg2">체크섬을 계산할 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
      <summary>입력 인수를 사용하여 계산된 체크섬 값을 반환합니다.</summary>
      <returns>입력 값을 사용하여 계산된 체크섬입니다.</returns>
      <param name="arg1">체크섬을 계산할 값입니다.</param>
      <param name="arg2">체크섬을 계산할 값입니다.</param>
      <param name="arg3">체크섬을 계산할 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.DateTime})">
      <summary>입력 인수를 사용하여 계산된 체크섬 값을 반환합니다.</summary>
      <returns>입력 값을 사용하여 계산된 체크섬입니다.</returns>
      <param name="arg1">체크섬을 계산할 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
      <summary>입력 인수를 사용하여 계산된 체크섬 값을 반환합니다.</summary>
      <returns>입력 값을 사용하여 계산된 체크섬입니다.</returns>
      <param name="arg1">체크섬을 계산할 값입니다.</param>
      <param name="arg2">체크섬을 계산할 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
      <summary>입력 인수를 사용하여 계산된 체크섬 값을 반환합니다.</summary>
      <returns>입력 값을 사용하여 계산된 체크섬입니다.</returns>
      <param name="arg1">체크섬을 계산할 값입니다.</param>
      <param name="arg2">체크섬을 계산할 값입니다.</param>
      <param name="arg3">체크섬을 계산할 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.DateTimeOffset})">
      <summary>입력 인수를 사용하여 계산된 체크섬 값을 반환합니다.</summary>
      <returns>입력 값을 사용하여 계산된 체크섬입니다.</returns>
      <param name="arg1">체크섬을 계산할 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})">
      <summary>입력 인수를 사용하여 계산된 체크섬 값을 반환합니다.</summary>
      <returns>입력 값을 사용하여 계산된 체크섬입니다.</returns>
      <param name="arg1">체크섬을 계산할 값입니다.</param>
      <param name="arg2">체크섬을 계산할 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})">
      <summary>입력 인수를 사용하여 계산된 체크섬 값을 반환합니다.</summary>
      <returns>입력 값을 사용하여 계산된 체크섬입니다.</returns>
      <param name="arg1">체크섬을 계산할 값입니다.</param>
      <param name="arg2">체크섬을 계산할 값입니다.</param>
      <param name="arg3">체크섬을 계산할 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.Decimal})">
      <summary>입력 인수를 사용하여 계산된 체크섬 값을 반환합니다.</summary>
      <returns>입력 값을 사용하여 계산된 체크섬입니다.</returns>
      <param name="arg1">체크섬을 계산할 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.Decimal},System.Nullable{System.Decimal})">
      <summary>입력 인수를 사용하여 계산된 체크섬 값을 반환합니다.</summary>
      <returns>입력 값을 사용하여 계산된 체크섬입니다.</returns>
      <param name="arg1">체크섬을 계산할 값입니다.</param>
      <param name="arg2">체크섬을 계산할 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal})">
      <summary>입력 인수를 사용하여 계산된 체크섬 값을 반환합니다.</summary>
      <returns>입력 값을 사용하여 계산된 체크섬입니다.</returns>
      <param name="arg1">체크섬을 계산할 값입니다.</param>
      <param name="arg2">체크섬을 계산할 값입니다.</param>
      <param name="arg3">체크섬을 계산할 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.Double})">
      <summary>입력 인수를 사용하여 계산된 체크섬 값을 반환합니다.</summary>
      <returns>입력 값을 사용하여 계산된 체크섬입니다.</returns>
      <param name="arg1">체크섬을 계산할 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.Double},System.Nullable{System.Double})">
      <summary>입력 인수를 사용하여 계산된 체크섬 값을 반환합니다.</summary>
      <returns>입력 값을 사용하여 계산된 체크섬입니다.</returns>
      <param name="arg1">체크섬을 계산할 값입니다.</param>
      <param name="arg2">체크섬을 계산할 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double})">
      <summary>입력 인수를 사용하여 계산된 체크섬 값을 반환합니다.</summary>
      <returns>입력 값을 사용하여 계산된 체크섬입니다.</returns>
      <param name="arg1">체크섬을 계산할 값입니다.</param>
      <param name="arg2">체크섬을 계산할 값입니다.</param>
      <param name="arg3">체크섬을 계산할 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.Guid})">
      <summary>입력 인수를 사용하여 계산된 체크섬 값을 반환합니다.</summary>
      <returns>입력 값을 사용하여 계산된 체크섬입니다.</returns>
      <param name="arg1">체크섬을 계산할 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.Guid},System.Nullable{System.Guid})">
      <summary>입력 인수를 사용하여 계산된 체크섬 값을 반환합니다.</summary>
      <returns>입력 값을 사용하여 계산된 체크섬입니다.</returns>
      <param name="arg1">체크섬을 계산할 값입니다.</param>
      <param name="arg2">체크섬을 계산할 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.Guid},System.Nullable{System.Guid},System.Nullable{System.Guid})">
      <summary>입력 인수를 사용하여 계산된 체크섬 값을 반환합니다.</summary>
      <returns>입력 값을 사용하여 계산된 체크섬입니다.</returns>
      <param name="arg1">체크섬을 계산할 값입니다.</param>
      <param name="arg2">체크섬을 계산할 값입니다.</param>
      <param name="arg3">체크섬을 계산할 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.TimeSpan})">
      <summary>입력 인수를 사용하여 계산된 체크섬 값을 반환합니다.</summary>
      <returns>입력 값을 사용하여 계산된 체크섬입니다.</returns>
      <param name="arg1">체크섬을 계산할 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})">
      <summary>입력 인수를 사용하여 계산된 체크섬 값을 반환합니다.</summary>
      <returns>입력 값을 사용하여 계산된 체크섬입니다.</returns>
      <param name="arg1">체크섬을 계산할 값입니다.</param>
      <param name="arg2">체크섬을 계산할 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})">
      <summary>입력 인수를 사용하여 계산된 체크섬 값을 반환합니다.</summary>
      <returns>입력 값을 사용하여 계산된 체크섬입니다.</returns>
      <param name="arg1">체크섬을 계산할 값입니다.</param>
      <param name="arg2">체크섬을 계산할 값입니다.</param>
      <param name="arg3">체크섬을 계산할 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.String)">
      <summary>입력 인수를 사용하여 계산된 체크섬 값을 반환합니다.</summary>
      <returns>입력 값을 사용하여 계산된 체크섬입니다.</returns>
      <param name="arg1">체크섬을 계산할 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.String,System.String)">
      <summary>입력 인수를 사용하여 계산된 체크섬 값을 반환합니다.</summary>
      <returns>입력 값을 사용하여 계산된 체크섬입니다.</returns>
      <param name="arg1">체크섬을 계산할 값입니다.</param>
      <param name="arg2">체크섬을 계산할 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.String,System.String,System.String)">
      <summary>입력 인수를 사용하여 계산된 체크섬 값을 반환합니다.</summary>
      <returns>입력 값을 사용하여 계산된 체크섬입니다.</returns>
      <param name="arg1">체크섬을 계산할 값입니다.</param>
      <param name="arg2">체크섬을 계산할 값입니다.</param>
      <param name="arg3">체크섬을 계산할 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.ChecksumAggregate(System.Collections.Generic.IEnumerable{System.Int32})">
      <summary>컬렉션에 있는 값의 체크섬을 반환합니다.Null 값은 무시됩니다.</summary>
      <returns>입력 컬렉션에서 계산된 체크섬입니다.</returns>
      <param name="arg">체크섬이 계산되는 값의 컬렉션입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.ChecksumAggregate(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})">
      <summary>컬렉션에 있는 값의 체크섬을 반환합니다.Null 값은 무시됩니다.</summary>
      <returns>입력 컬렉션에서 계산된 체크섬입니다.</returns>
      <param name="arg">체크섬이 계산되는 값의 컬렉션입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Cos(System.Nullable{System.Decimal})">
      <summary>지정된 식에서 라디안으로 지정된 각도의 삼각 코사인을 반환합니다.</summary>
      <returns>지정된 각도의 삼각 코사인입니다.</returns>
      <param name="arg">라디안 단위의 각도입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Cos(System.Nullable{System.Double})">
      <summary>지정된 식에서 라디안으로 지정된 각도의 삼각 코사인을 반환합니다.</summary>
      <returns>지정된 각도의 삼각 코사인입니다.</returns>
      <param name="arg">라디안 단위의 각도입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Cot(System.Nullable{System.Decimal})">
      <summary>지정된 각도의 삼각 코탄젠트를 라디안으로 반환하는 수학 함수입니다.</summary>
      <returns>지정된 각도의 삼각 코탄젠트입니다.</returns>
      <param name="arg">라디안 단위의 각도입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Cot(System.Nullable{System.Double})">
      <summary>지정된 각도의 삼각 코탄젠트를 라디안으로 반환하는 수학 함수입니다.</summary>
      <returns>지정된 각도의 삼각 코탄젠트입니다.</returns>
      <param name="arg">라디안 단위의 각도입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.CurrentTimestamp">
      <summary>현재 날짜와 시간을 반환합니다.</summary>
      <returns>현재 날짜와 시간입니다.</returns>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.CurrentUser">
      <summary>현재 사용자의 이름을 반환합니다.</summary>
      <returns>현재 사용자의 이름입니다.</returns>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DataLength(System.Byte[])">
      <summary>식을 표시하는 데 사용되는 바이트 수를 반환합니다.</summary>
      <returns>입력 값의 바이트 수입니다.</returns>
      <param name="arg">길이를 검사할 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DataLength(System.Nullable{System.Boolean})">
      <summary>식을 표시하는 데 사용되는 바이트 수를 반환합니다.</summary>
      <returns>입력 값의 바이트 수입니다.</returns>
      <param name="arg">데이터 길이를 검사할 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DataLength(System.Nullable{System.DateTime})">
      <summary>식을 표시하는 데 사용되는 바이트 수를 반환합니다.</summary>
      <returns>입력 값의 바이트 수입니다.</returns>
      <param name="arg">데이터 길이를 검사할 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DataLength(System.Nullable{System.DateTimeOffset})">
      <summary>식을 표시하는 데 사용되는 바이트 수를 반환합니다.</summary>
      <returns>입력 값의 바이트 수입니다.</returns>
      <param name="arg">데이터 길이를 검사할 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DataLength(System.Nullable{System.Decimal})">
      <summary>식을 표시하는 데 사용되는 바이트 수를 반환합니다.</summary>
      <returns>입력 값의 바이트 수입니다.</returns>
      <param name="arg">데이터 길이를 검사할 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DataLength(System.Nullable{System.Double})">
      <summary>식을 표시하는 데 사용되는 바이트 수를 반환합니다.</summary>
      <returns>입력 값의 바이트 수입니다.</returns>
      <param name="arg">데이터 길이를 검사할 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DataLength(System.Nullable{System.Guid})">
      <summary>식을 표시하는 데 사용되는 바이트 수를 반환합니다.</summary>
      <returns>입력 값의 바이트 수입니다.</returns>
      <param name="arg">데이터 길이를 검사할 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DataLength(System.Nullable{System.TimeSpan})">
      <summary>식을 표시하는 데 사용되는 바이트 수를 반환합니다.</summary>
      <returns>입력 값의 바이트 수입니다.</returns>
      <param name="arg">데이터 길이를 검사할 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DataLength(System.String)">
      <summary>식을 표시하는 데 사용되는 바이트 수를 반환합니다.</summary>
      <returns>입력 값의 바이트 수입니다.</returns>
      <param name="arg">데이터 길이를 검사할 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateAdd(System.String,System.Nullable{System.Double},System.Nullable{System.DateTime})">
      <summary>지정된 날짜에 간격을 더하여 만든 새 datetime 값을 반환합니다.</summary>
      <returns>새 날짜입니다.</returns>
      <param name="datePartArg">증가시킬 날짜 부분입니다.</param>
      <param name="number">지정된 크기만큼 날짜를 증가시키는 데 사용되는 값입니다.</param>
      <param name="date">증가시킬 날짜입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateAdd(System.String,System.Nullable{System.Double},System.Nullable{System.DateTimeOffset})">
      <summary>지정된 날짜에 간격을 더하여 만든 새 날짜 값을 반환합니다.</summary>
      <returns>UTC(협정 세계시)를 기준으로 날짜와 시간으로 표현한 새 시각입니다.</returns>
      <param name="datePartArg">증가시킬 날짜 부분입니다.</param>
      <param name="number">지정된 크기만큼 날짜를 증가시키는 데 사용되는 값입니다.</param>
      <param name="dateTimeOffsetArg">증가시킬 날짜입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateAdd(System.String,System.Nullable{System.Double},System.Nullable{System.TimeSpan})">
      <summary>지정된 시간 범위에 간격을 더하여 만든 새 시간 범위 값을 반환합니다.</summary>
      <returns>새 시간 범위입니다.</returns>
      <param name="datePartArg">증가시킬 날짜 부분입니다.</param>
      <param name="number">지정된 크기만큼 날짜를 증가시키는 데 사용되는 값입니다.</param>
      <param name="time">증가시킬 시간 범위입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateAdd(System.String,System.Nullable{System.Double},System.String)">
      <summary>지정된 날짜에 간격을 더하여 만든 새 datetime 값을 반환합니다.</summary>
      <returns>새 날짜인 <see cref="T:System.DateTime" /> 값의 <see cref="T:System.Nullable`1" />입니다.</returns>
      <param name="datePartArg">증가시킬 날짜 부분입니다.</param>
      <param name="number">지정된 크기만큼 날짜를 증가시키는 데 사용되는 값입니다.</param>
      <param name="date">증가시킬 날짜입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
      <summary>지정한 시작 날짜와 종료 날짜 사이에 포함되는 지정된 datepart 경계의 수를 반환합니다.</summary>
      <returns>두 날짜 사이의 시간 간격 수입니다.</returns>
      <param name="datePartArg">날짜에서 시간 간격의 차이를 계산할 부분입니다.</param>
      <param name="startDate">첫 번째 날짜입니다.</param>
      <param name="endDate">두 번째 날짜입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTimeOffset})">
      <summary>지정한 시작 날짜와 종료 날짜 사이에 포함되는 지정된 datepart 경계의 수를 반환합니다.</summary>
      <returns>두 날짜 사이의 시간 간격 수입니다.</returns>
      <param name="datePartArg">날짜에서 시간 간격의 차이를 계산할 부분입니다.</param>
      <param name="startDate">첫 번째 날짜입니다.</param>
      <param name="endDate">두 번째 날짜입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTime},System.Nullable{System.TimeSpan})">
      <summary>지정한 시작 날짜와 종료 날짜 사이에 포함되는 지정된 datepart 경계의 수를 반환합니다.</summary>
      <returns>두 날짜 사이의 시간 간격 수입니다.</returns>
      <param name="datePartArg">날짜에서 시간 간격의 차이를 계산할 부분입니다.</param>
      <param name="startDate">첫 번째 날짜입니다.</param>
      <param name="endDate">두 번째 날짜입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTime},System.String)">
      <summary>지정한 시작 날짜와 종료 날짜 사이에 포함되는 지정된 datepart 경계의 수를 반환합니다.</summary>
      <returns>두 날짜 사이의 시간 간격 수입니다.</returns>
      <param name="datePartArg">날짜에서 시간 간격의 차이를 계산할 부분입니다.</param>
      <param name="startDate">첫 번째 날짜입니다.</param>
      <param name="endDate">두 번째 날짜입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTime})">
      <summary>지정한 시작 날짜와 종료 날짜 사이에 포함되는 지정된 datepart 경계의 수를 반환합니다.</summary>
      <returns>두 날짜 사이의 시간 간격 수입니다.</returns>
      <param name="datePartArg">날짜에서 시간 간격의 차이를 계산할 부분입니다.</param>
      <param name="startDate">첫 번째 날짜입니다.</param>
      <param name="endDate">두 번째 날짜입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})">
      <summary>지정한 시작 날짜와 종료 날짜 사이에 포함되는 지정된 datepart 경계의 수를 반환합니다.</summary>
      <returns>두 날짜 사이의 시간 간격 수입니다.</returns>
      <param name="datePartArg">날짜에서 시간 간격의 차이를 계산할 부분입니다.</param>
      <param name="startDate">첫 번째 날짜입니다.</param>
      <param name="endDate">두 번째 날짜입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.TimeSpan})">
      <summary>지정한 시작 날짜와 종료 날짜 사이에 포함되는 지정된 datepart 경계의 수를 반환합니다.</summary>
      <returns>두 날짜 사이의 시간 간격 수입니다.</returns>
      <param name="datePartArg">날짜에서 시간 간격의 차이를 계산할 부분입니다.</param>
      <param name="startDate">첫 번째 날짜입니다.</param>
      <param name="endDate">두 번째 날짜입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTimeOffset},System.String)">
      <summary>지정한 시작 날짜와 종료 날짜 사이에 포함되는 지정된 datepart 경계의 수를 반환합니다.</summary>
      <returns>두 날짜 사이의 시간 간격 수입니다.</returns>
      <param name="datePartArg">날짜에서 시간 간격의 차이를 계산할 부분입니다.</param>
      <param name="startDate">첫 번째 날짜입니다.</param>
      <param name="endDate">두 번째 날짜입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateDiff(System.String,System.Nullable{System.TimeSpan},System.Nullable{System.DateTime})">
      <summary>지정한 시작 날짜와 종료 날짜 사이에 포함되는 지정된 datepart 경계의 수를 반환합니다.</summary>
      <returns>두 날짜 사이의 시간 간격 수입니다.</returns>
      <param name="datePartArg">날짜에서 시간 간격의 차이를 계산할 부분입니다.</param>
      <param name="startDate">첫 번째 날짜입니다.</param>
      <param name="endDate">두 번째 날짜입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateDiff(System.String,System.Nullable{System.TimeSpan},System.Nullable{System.DateTimeOffset})">
      <summary>지정한 시작 날짜와 종료 날짜 사이에 포함되는 지정된 datepart 경계의 수를 반환합니다.</summary>
      <returns>두 날짜 사이의 시간 간격 수입니다.</returns>
      <param name="datePartArg">날짜에서 시간 간격의 차이를 계산할 부분입니다.</param>
      <param name="startDate">첫 번째 날짜입니다.</param>
      <param name="endDate">두 번째 날짜입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateDiff(System.String,System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})">
      <summary>지정한 시작 날짜와 종료 날짜 사이에 포함되는 지정된 datepart 경계의 수를 반환합니다.</summary>
      <returns>두 날짜 사이의 시간 간격 수입니다.</returns>
      <param name="datePartArg">날짜에서 시간 간격의 차이를 계산할 부분입니다.</param>
      <param name="startDate">첫 번째 날짜입니다.</param>
      <param name="endDate">두 번째 날짜입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateDiff(System.String,System.Nullable{System.TimeSpan},System.String)">
      <summary>지정한 시작 날짜와 종료 날짜 사이에 포함되는 지정된 datepart 경계의 수를 반환합니다.</summary>
      <returns>두 날짜 사이의 시간 간격 수입니다.</returns>
      <param name="datePartArg">날짜에서 시간 간격의 차이를 계산할 부분입니다.</param>
      <param name="startDate">첫 번째 날짜입니다.</param>
      <param name="endDate">두 번째 날짜입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateDiff(System.String,System.String,System.Nullable{System.DateTime})">
      <summary>지정한 시작 날짜와 종료 날짜 사이에 포함되는 지정된 datepart 경계의 수를 반환합니다.</summary>
      <returns>두 날짜 사이의 시간 간격 수입니다.</returns>
      <param name="datePartArg">날짜에서 시간 간격의 차이를 계산할 부분입니다.</param>
      <param name="startDate">첫 번째 날짜입니다.</param>
      <param name="endDate">두 번째 날짜입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateDiff(System.String,System.String,System.Nullable{System.DateTimeOffset})">
      <summary>지정한 시작 날짜와 종료 날짜 사이에 포함되는 지정된 datepart 경계의 수를 반환합니다.</summary>
      <returns>두 날짜 사이의 시간 간격 수입니다.</returns>
      <param name="datePartArg">날짜에서 시간 간격의 차이를 계산할 부분입니다.</param>
      <param name="startDate">첫 번째 날짜입니다.</param>
      <param name="endDate">두 번째 날짜입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateDiff(System.String,System.String,System.Nullable{System.TimeSpan})">
      <summary>지정한 시작 날짜와 종료 날짜 사이에 포함되는 지정된 datepart 경계의 수를 반환합니다.</summary>
      <returns>두 날짜 사이의 시간 간격 수를 지정하는 값입니다.</returns>
      <param name="datePartArg">날짜에서 시간 간격의 차이를 계산할 부분입니다.</param>
      <param name="startDate">첫 번째 날짜입니다.</param>
      <param name="endDate">두 번째 날짜입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateDiff(System.String,System.String,System.String)">
      <summary>지정한 시작 날짜와 종료 날짜 사이에 포함되는 지정된 datepart 경계의 수를 반환합니다.</summary>
      <returns>두 날짜 사이의 시간 간격 수입니다.</returns>
      <param name="datePartArg">날짜에서 시간 간격의 차이를 계산할 부분입니다.</param>
      <param name="startDate">첫 번째 날짜입니다.</param>
      <param name="endDate">두 번째 날짜입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateName(System.String,System.Nullable{System.DateTime})">
      <summary>지정한 날짜의 지정된 datepart를 나타내는 문자열을 반환합니다.</summary>
      <returns>지정한 날짜의 지정된 부분입니다.</returns>
      <param name="datePartArg">날짜에서 시간 간격의 차이를 계산할 부분입니다.</param>
      <param name="date">날짜입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateName(System.String,System.Nullable{System.DateTimeOffset})">
      <summary>지정한 날짜의 지정된 datepart를 나타내는 문자열을 반환합니다.</summary>
      <returns>지정한 날짜의 지정된 부분입니다.</returns>
      <param name="datePartArg">날짜에서 시간 간격의 차이를 계산할 부분입니다.</param>
      <param name="date">날짜입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateName(System.String,System.Nullable{System.TimeSpan})">
      <summary>지정한 날짜의 지정된 datepart를 나타내는 문자열을 반환합니다.</summary>
      <returns>지정한 날짜의 지정된 부분입니다.</returns>
      <param name="datePartArg">날짜에서 시간 간격의 차이를 계산할 부분입니다.</param>
      <param name="date">날짜입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateName(System.String,System.String)">
      <summary>지정한 날짜의 지정된 datepart를 나타내는 문자열을 반환합니다.</summary>
      <returns>지정한 날짜의 지정된 부분입니다.</returns>
      <param name="datePartArg">날짜에서 시간 간격의 차이를 계산할 부분입니다.</param>
      <param name="date">날짜입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DatePart(System.String,System.Nullable{System.DateTime})">
      <summary>지정한 날짜의 지정한 부분을 나타내는 정수를 반환합니다.</summary>
      <returns>지정한 날짜의 지정된 datepart입니다.</returns>
      <param name="datePartArg">값을 반환할 날짜 부분입니다.</param>
      <param name="date">날짜입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DatePart(System.String,System.Nullable{System.DateTimeOffset})">
      <summary>지정한 날짜의 지정한 부분을 나타내는 정수를 반환합니다.</summary>
      <returns>지정한 날짜의 지정된 datepart입니다.</returns>
      <param name="datePartArg">값을 반환할 날짜 부분입니다.</param>
      <param name="date">날짜입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DatePart(System.String,System.Nullable{System.TimeSpan})">
      <summary>지정한 날짜의 지정한 부분을 나타내는 정수를 반환합니다.</summary>
      <returns>지정한 날짜의 지정된 datepart입니다.</returns>
      <param name="datePartArg">값을 반환할 날짜 부분입니다.</param>
      <param name="date">날짜입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DatePart(System.String,System.String)">
      <summary>지정한 날짜의 지정한 부분을 나타내는 정수를 반환합니다.</summary>
      <returns>지정한 날짜의 지정된 datepart입니다.</returns>
      <param name="datePartArg">값을 반환할 날짜 부분입니다.</param>
      <param name="date">날짜입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Degrees(System.Nullable{System.Decimal})">
      <summary>라디안으로 지정된 각도에 해당하는 각도(도)를 반환합니다.</summary>
      <returns>도로 변환된 지정된 각도입니다.</returns>
      <param name="arg1">라디안 단위의 각도입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Degrees(System.Nullable{System.Double})">
      <summary>라디안으로 지정된 각도에 해당하는 각도(도)를 반환합니다.</summary>
      <returns>도로 변환된 지정된 각도입니다.</returns>
      <param name="arg1">라디안 단위의 각도입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Degrees(System.Nullable{System.Int32})">
      <summary>라디안으로 지정된 각도에 해당하는 각도(도)를 반환합니다.</summary>
      <returns>도로 변환된 지정된 각도입니다.</returns>
      <param name="arg1">라디안 단위의 각도입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Degrees(System.Nullable{System.Int64})">
      <summary>라디안으로 지정된 각도에 해당하는 각도(도)를 반환합니다.</summary>
      <returns>도로 변환된 지정된 각도입니다.</returns>
      <param name="arg1">라디안 단위의 각도입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Difference(System.String,System.String)">
      <summary>두 문자 식의 SOUNDEX 값을 비교하여 차이를 나타내는 정수 값을 반환합니다.</summary>
      <returns>두 문자열의 SOUNDEX 차이입니다.</returns>
      <param name="string1">첫 번째 문자열입니다.</param>
      <param name="string2">두 번째 문자열입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Exp(System.Nullable{System.Decimal})">
      <summary>지정된 float 식의 지수 값을 반환합니다.</summary>
      <returns>입력 값만큼 거듭제곱된 상수 e입니다.</returns>
      <param name="arg">입력 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Exp(System.Nullable{System.Double})">
      <summary>지정된 float 식의 지수 값을 반환합니다.</summary>
      <returns>입력 값만큼 거듭제곱된 상수 e입니다.</returns>
      <param name="arg">입력 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.GetDate">
      <summary>데이터베이스 표준 시간대 오프셋 없이 datetime 값으로 현재 데이터베이스 시스템 타임스탬프를 반환합니다.이 값은 SQL Server 인스턴스가 실행되는 컴퓨터의 운영 체제에서 파생됩니다.</summary>
      <returns>현재 데이터베이스 타임스탬프입니다.</returns>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.GetUtcDate">
      <summary>datetime 값으로 현재 데이터베이스 시스템 타임스탬프를 반환합니다.데이터베이스 표준 시간대 오프셋은 포함되지 않습니다.이 값은 현재 UTC 시간(협정 세계시)을 나타냅니다.이 값은 SQL Server 인스턴스가 실행되는 컴퓨터의 운영 체제에서 파생됩니다.</summary>
      <returns>현재 데이터베이스 UTC 타임스탬프입니다.</returns>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.HostName">
      <summary>워크스테이션 이름을 반환합니다.</summary>
      <returns>워크스테이션의 이름입니다.</returns>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.IsDate(System.String)">
      <summary>입력 값이 유효한 날짜 또는 시간인지 여부를 나타냅니다.</summary>
      <returns>입력 식이 datetime 또는 smalldatetime 데이터 형식의 유효한 날짜 또는 시간 값이면 1이고, 그렇지 않으면 0입니다.</returns>
      <param name="arg">테스트된 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.IsNumeric(System.String)">
      <summary>입력 값이 유효한 숫자 형식인지 여부를 나타냅니다.</summary>
      <returns>입력 식이 유효한 숫자 데이터 형식이면 1이고, 그렇지 않으면 0입니다.</returns>
      <param name="arg">문자열 식입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Log(System.Nullable{System.Decimal})">
      <summary>지정된 입력 값의 자연 로그를 반환합니다.</summary>
      <returns>입력 값의 자연 로그입니다.</returns>
      <param name="arg">숫자 식입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Log(System.Nullable{System.Double})">
      <summary>지정된 입력 값의 자연 로그를 반환합니다.</summary>
      <returns>입력 값의 자연 로그입니다.</returns>
      <param name="arg">숫자 식입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Log10(System.Nullable{System.Decimal})">
      <summary>지정된 입력 값의 상용 로그를 반환합니다.</summary>
      <returns>입력 값의 상용 로그입니다.</returns>
      <param name="arg">숫자 식입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Log10(System.Nullable{System.Double})">
      <summary>지정된 입력 값의 상용 로그를 반환합니다.</summary>
      <returns>입력 값의 상용 로그입니다.</returns>
      <param name="arg">숫자 식입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.NChar(System.Nullable{System.Int32})">
      <summary>유니코드 표준의 정의에 따라, 지정된 정수 코드에 해당하는 유니코드 문자를 반환합니다.</summary>
      <returns>입력 문자 코드에 해당하는 문자입니다.</returns>
      <param name="arg">문자 코드입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.PatIndex(System.String,System.String)">
      <summary>지정된 식에서 처음 발견된 패턴의 시작 위치를 반환하거나, 패턴이 없으면 모든 유효한 텍스트 및 문자 데이터 형식에 대해 0을 반환합니다.</summary>
      <returns>문자열 패턴을 찾은 시작 문자 위치입니다.</returns>
      <param name="stringPattern">검색할 문자열 패턴입니다.</param>
      <param name="target">검색할 문자열입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Pi">
      <summary>파이의 상수 값을 반환합니다.</summary>
      <returns>파이의 숫자 값입니다.</returns>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.QuoteName(System.String)">
      <summary>입력 문자열을 유효한 Microsoft SQL Server 구분 식별자로 만들기 위해 구분 기호가 추가된 유니코드 문자열을 반환합니다.</summary>
      <returns>대괄호가 추가된 원래 문자열입니다.</returns>
      <param name="stringArg">따옴표 문자를 추가할 식입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.QuoteName(System.String,System.String)">
      <summary>입력 문자열을 유효한 Microsoft SQL Server 구분 식별자로 만들기 위해 구분 기호가 추가된 유니코드 문자열을 반환합니다.</summary>
      <returns>지정된 따옴표 문자가 추가된 원래 문자열입니다.</returns>
      <param name="stringArg">따옴표 문자를 추가할 식입니다.</param>
      <param name="quoteCharacter">구분 기호로 사용할 단일 문자로 된 문자열입니다.작은따옴표( ' ), 왼쪽 또는 오른쪽 대괄호( [ ] ) 또는 큰따옴표( " )일 수 있습니다.따옴표 문자를 지정하지 않은 경우 대괄호가 사용됩니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Radians(System.Nullable{System.Decimal})">
      <summary>지정된 각도(도)에 해당하는 라디안 값을 반환합니다.</summary>
      <returns>지정된 각도의 라디안 값입니다.</returns>
      <param name="arg">도 단위의 각도입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Radians(System.Nullable{System.Double})">
      <summary>지정된 각도(도)에 해당하는 라디안 값을 반환합니다.</summary>
      <returns>지정된 각도의 라디안 값입니다.</returns>
      <param name="arg">도 단위의 각도입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Radians(System.Nullable{System.Int32})">
      <summary>지정된 각도(도)에 해당하는 라디안 값을 반환합니다.</summary>
      <returns>지정된 각도의 라디안 값입니다.</returns>
      <param name="arg">도 단위의 각도입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Radians(System.Nullable{System.Int64})">
      <summary>지정된 각도(도)에 해당하는 라디안 값을 반환합니다.</summary>
      <returns>지정된 각도의 라디안 값입니다.</returns>
      <param name="arg">도 단위의 각도입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Rand">
      <summary>0에서 1 사이의 의사 난수 float 값(0, 1은 제외)을 반환합니다.</summary>
      <returns>의사 난수 값입니다.</returns>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Rand(System.Nullable{System.Int32})">
      <summary>0에서 1 사이의 의사 난수 float 값(0, 1은 제외)을 반환합니다.</summary>
      <returns>의사 난수 값입니다.</returns>
      <param name="seed">시드 값입니다.시드를 지정하지 않으면 SQL Server 데이터베이스 엔진에서 시드 값을 임의로 할당합니다.지정된 특정 시드 값에 대해 반환되는 결과는 항상 동일합니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Replicate(System.String,System.Nullable{System.Int32})">
      <summary>문자열 값을 지정한 횟수만큼 반복합니다.</summary>
      <returns>count로 지정된 횟수만큼 반복되는 대상 문자열입니다.</returns>
      <param name="target">유효한 문자열입니다.</param>
      <param name="count">대상을 반복할 횟수를 지정하는 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Sign(System.Nullable{System.Decimal})">
      <summary>지정한 식의 양수(+1), 0 또는 음수(-1) 부호를 반환합니다.</summary>
      <returns>입력 식의 부호입니다.</returns>
      <param name="arg">숫자 식입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Sign(System.Nullable{System.Double})">
      <summary>지정한 식의 양수(+1), 0 또는 음수(-1) 부호를 반환합니다.</summary>
      <returns>입력 식의 부호입니다.</returns>
      <param name="arg">숫자 식입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Sign(System.Nullable{System.Int32})">
      <summary>지정한 식의 양수(+1), 0 또는 음수(-1) 부호를 반환합니다.</summary>
      <returns>입력 식의 부호입니다.</returns>
      <param name="arg">숫자 식입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Sign(System.Nullable{System.Int64})">
      <summary>지정한 식의 양수(+1), 0 또는 음수(-1) 부호를 반환합니다.</summary>
      <returns>입력 식의 부호입니다.</returns>
      <param name="arg">숫자 식입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Sin(System.Nullable{System.Decimal})">
      <summary>지정된 각도의 삼각 사인을 반환합니다.</summary>
      <returns>입력 식의 삼각 사인입니다.</returns>
      <param name="arg">라디안 단위의 각도입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Sin(System.Nullable{System.Double})">
      <summary>지정된 각도의 삼각 사인을 반환합니다.</summary>
      <returns>입력 식의 삼각 사인입니다.</returns>
      <param name="arg">라디안 단위의 각도입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.SoundCode(System.String)">
      <summary>발음이 비슷한 단어나 이름을 찾기 위해 영숫자 문자열을 4자리(SOUNDEX) 코드로 변환합니다.</summary>
      <returns>입력 문자열의 SOUNDEX 코드입니다.</returns>
      <param name="arg">유효한 문자열입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Space(System.Nullable{System.Int32})">
      <summary>반복되는 공백으로 구성된 문자열을 반환합니다.</summary>
      <returns>지정한 수만큼의 공백으로 구성된 문자열입니다.</returns>
      <param name="arg1">공백 개수입니다.음수이면 Null 문자열이 반환됩니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Square(System.Nullable{System.Decimal})">
      <summary>지정된 숫자의 제곱을 반환합니다.</summary>
      <returns>입력 값의 제곱입니다.</returns>
      <param name="arg1">숫자 식입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Square(System.Nullable{System.Double})">
      <summary>지정된 숫자의 제곱을 반환합니다.</summary>
      <returns>입력 값의 제곱입니다.</returns>
      <param name="arg1">숫자 식입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.SquareRoot(System.Nullable{System.Decimal})">
      <summary>지정된 숫자의 제곱근을 반환합니다.</summary>
      <returns>입력 값의 제곱근입니다.</returns>
      <param name="arg">숫자 식입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.SquareRoot(System.Nullable{System.Double})">
      <summary>지정된 숫자의 제곱근을 반환합니다.</summary>
      <returns>입력 값의 제곱근입니다.</returns>
      <param name="arg">숫자 식입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.StringConvert(System.Nullable{System.Decimal})">
      <summary>숫자 데이터에서 변환된 문자 데이터를 반환합니다.</summary>
      <returns>문자열로 변환된 입력 식입니다.</returns>
      <param name="number">숫자 식입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.StringConvert(System.Nullable{System.Decimal},System.Nullable{System.Int32})">
      <summary>숫자 데이터에서 변환된 문자 데이터를 반환합니다.</summary>
      <returns>문자열로 변환된 입력 식입니다.</returns>
      <param name="number">숫자 식입니다.</param>
      <param name="length">문자열의 총 길이입니다.소수점, 부호, 숫자 및 공백을 포함한 길이입니다.기본값은 10입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.StringConvert(System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.Int32})">
      <summary>숫자 데이터에서 변환된 문자 데이터를 반환합니다.</summary>
      <returns>문자열로 변환된 입력 식입니다.</returns>
      <param name="number">숫자 식입니다.</param>
      <param name="length">문자열의 총 길이입니다.소수점, 부호, 숫자 및 공백을 포함한 길이입니다.기본값은 10입니다.</param>
      <param name="decimalArg">소수점 오른쪽의 자릿수입니다.decimal은 16 이하여야 합니다.decimal이 16을 초과할 경우 결과가 소수점 이하 16자릿수에서 잘립니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.StringConvert(System.Nullable{System.Double})">
      <summary>숫자 데이터에서 변환된 문자 데이터를 반환합니다.</summary>
      <returns>문자열로 변환된 숫자 입력 식입니다.</returns>
      <param name="number">숫자 식입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.StringConvert(System.Nullable{System.Double},System.Nullable{System.Int32})">
      <summary>숫자 데이터에서 변환된 문자 데이터를 반환합니다.</summary>
      <returns>문자열로 변환된 숫자 입력 식입니다.</returns>
      <param name="number">숫자 식입니다.</param>
      <param name="length">문자열의 총 길이입니다.소수점, 부호, 숫자 및 공백을 포함한 길이입니다.기본값은 10입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.StringConvert(System.Nullable{System.Double},System.Nullable{System.Int32},System.Nullable{System.Int32})">
      <summary>숫자 데이터에서 변환된 문자 데이터를 반환합니다.</summary>
      <returns>문자열로 변환된 숫자 입력 식입니다.</returns>
      <param name="number">숫자 식입니다.</param>
      <param name="length">문자열의 총 길이입니다.소수점, 부호, 숫자 및 공백을 포함한 길이입니다.기본값은 10입니다.</param>
      <param name="decimalArg">소수점 오른쪽의 자릿수입니다.decimal은 16 이하여야 합니다.decimal이 16을 초과할 경우 결과가 소수점 이하 16자릿수에서 잘립니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Stuff(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
      <summary>문자열을 다른 문자열에 삽입합니다.대상 문자열의 시작 위치에서 지정된 길이의 문자를 삭제한 다음 두 번째 문자열을 대상 문자열의 시작 위치에 삽입합니다.</summary>
      <returns>두 문자열로 구성된 문자열입니다.</returns>
      <param name="stringInput">대상 문자열입니다.</param>
      <param name="start">대체 문자열이 삽입될 stringinput의 문자 위치입니다.</param>
      <param name="length">stringInput에서 삭제할 문자 수입니다.길이가 stringInput보다 길면 stringReplacement의 마지막 문자까지 삭제됩니다.</param>
      <param name="stringReplacement">stringInput에 삽입할 하위 문자열입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Tan(System.Nullable{System.Decimal})">
      <summary>입력 식의 삼각 탄젠트를 반환합니다.</summary>
      <returns>입력 각도의 탄젠트입니다.</returns>
      <param name="arg">라디안 단위의 각도입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Tan(System.Nullable{System.Double})">
      <summary>입력 식의 삼각 탄젠트를 반환합니다.</summary>
      <returns>입력 각도의 탄젠트입니다.</returns>
      <param name="arg">라디안 단위의 각도입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Unicode(System.String)">
      <summary>유니코드 표준의 정의에 따라 입력 식에 있는 첫 번째 문자의 정수 값을 반환합니다.</summary>
      <returns>입력 문자열에 있는 첫 번째 문자의 문자 코드입니다.</returns>
      <param name="arg">유효한 문자열입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.UserName">
      <summary>지정된 ID 번호에 해당하는 데이터베이스 사용자 이름을 반환합니다.</summary>
      <returns>사용자 이름입니다.</returns>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.UserName(System.Nullable{System.Int32})">
      <summary>지정된 ID 번호에 해당하는 데이터베이스 사용자 이름을 반환합니다.</summary>
      <returns>사용자 이름입니다.</returns>
      <param name="arg">사용자 ID입니다.</param>
    </member>
    <member name="T:System.Data.Entity.SqlServer.SqlProviderServices">
      <summary>SQL Server용 SqlClient 공급자에 대한 DbProviderServices 구현입니다.</summary>
    </member>
    <member name="P:System.Data.Entity.SqlServer.SqlProviderServices.Instance">
      <summary>SqlProviderServices 형식의 Singleton 인스턴스입니다.</summary>
    </member>
    <member name="F:System.Data.Entity.SqlServer.SqlProviderServices.ProviderInvariantName">
      <summary>구성 파일 및 코드 기반 구성에서 ADO.NET용 Microsoft SQL Server 및 Entity Framework 공급자 서비스를 지정하는 데 사용되는 "공급자 고정 이름"으로 사용하는 잘 알려진 문자열입니다.</summary>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlProviderServices.RegisterInfoMessageHandler(System.Data.Common.DbConnection,System.Action{System.String})">
      <summary>데이터베이스 공급자가 보내는 오류 없음 메시지를 처리할 처리기를 등록합니다.</summary>
      <param name="connection">정보를 받을 연결입니다.</param>
      <param name="handler">메시지를 처리할 처리기입니다.</param>
    </member>
    <member name="P:System.Data.Entity.SqlServer.SqlProviderServices.TruncateDecimalsToScale">
      <summary>
        <see cref="T:System.Decimal" /> 값이 열에 대해 정의된 소수 자릿수로 잘리지 않도록 하려면 이 플래그를 false로 설정합니다.기본값은 true이며, 이는 이 동작에 따라 달라지는 기존 응용 프로그램이 중단되지 않도록 10진수 값이 잘림을 나타냅니다.</summary>
    </member>
    <member name="T:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator"></member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.#ctor"></member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.BuildColumnType(System.Data.Entity.Migrations.Model.ColumnModel)"></member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.CreateConnection"></member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Boolean)"></member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Byte[])"></member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Collections.Generic.IEnumerable{System.Data.Entity.Migrations.Model.MigrationOperation},System.String)"></member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.AddColumnOperation)"></member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.AddForeignKeyOperation)"></member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.AddPrimaryKeyOperation)"></member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.AlterColumnOperation)"></member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.AlterProcedureOperation)"></member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.CreateIndexOperation)"></member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.CreateProcedureOperation)"></member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.CreateTableOperation)"></member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.DropColumnOperation)"></member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.DropForeignKeyOperation)"></member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.DropIndexOperation)"></member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.DropPrimaryKeyOperation)"></member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.DropProcedureOperation)"></member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.DropTableOperation)"></member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.HistoryOperation)"></member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.MigrationOperation)"></member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.MoveProcedureOperation)"></member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.MoveTableOperation)"></member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.RenameColumnOperation)"></member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.RenameProcedureOperation)"></member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.RenameTableOperation)"></member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.SqlOperation)"></member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.UpdateDatabaseOperation)"></member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Spatial.DbGeography)"></member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Spatial.DbGeometry)"></member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.DateTime)"></member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.DateTimeOffset)"></member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Guid)"></member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Object)"></member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.String)"></member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.TimeSpan)"></member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.GenerateCreateSchema(System.String)"></member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.GenerateMakeSystemTable(System.Data.Entity.Migrations.Model.CreateTableOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)"></member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.GenerateProcedureBody(System.Collections.Generic.ICollection{System.Data.Entity.Core.Common.CommandTrees.DbModificationCommandTree},System.String,System.String)"></member>
    <member name="P:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.GuidColumnDefault"></member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Name(System.String)"></member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Quote(System.String)"></member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Statement(System.Data.Entity.Migrations.Utilities.IndentedTextWriter,System.String)"></member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Statement(System.String,System.Boolean,System.String)"></member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Writer"></member>
    <member name="T:System.Data.Entity.SqlServer.SqlSpatialFunctions">
      <summary>LINQ to Entities에서 SqlServer 메서드를 노출하는 함수 스텁을 포함합니다.</summary>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialFunctions.AsTextZM(System.Data.Entity.Spatial.DbGeography)">
      <summary>인스턴스에 의해 수행된 Z(상승) 및 M(측정) 값으로 확장된 지리 인스턴스의 OGC(Open Geospatial Consortium) WKT(Well-Known Text) 표현을 반환합니다.</summary>
      <returns>지리 인스턴스의 OGC(Open Geospatial Consortium) WKT(Well-Known Text) 표현입니다.</returns>
      <param name="geographyValue">지리 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialFunctions.AsTextZM(System.Data.Entity.Spatial.DbGeometry)">
      <summary>인스턴스에 의해 수행된 Z(상승) 및 M(측정) 값으로 확장된 지리 인스턴스의 OGC(Open Geospatial Consortium) WKT(Well-Known Text) 표현을 반환합니다.</summary>
      <returns>기하학 인스턴스의 OGC(Open Geospatial Consortium) WKT(Well-Known Text) 표현입니다.</returns>
      <param name="geometryValue">기하 도형 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialFunctions.BufferWithTolerance(System.Data.Entity.Spatial.DbGeography,System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Boolean})">
      <summary>모든 점 값의 공통 부분을 나타내는 기하학적 개체를 반환합니다. 지리 인스턴스에서 이 점의 거리는 지정한 값보다 작거나 같아야 합니다.</summary>
      <returns>지리 인스턴스로부터의 거리가 지정된 값보다 작거나 같은 모든 점의 값을 결합한 것입니다.</returns>
      <param name="geographyValue">지리 값입니다.</param>
      <param name="distance">거리입니다.</param>
      <param name="tolerance">지정된 허용치입니다.</param>
      <param name="relative">허용 오차 값이 상대적인지 절대적인지 지정합니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialFunctions.BufferWithTolerance(System.Data.Entity.Spatial.DbGeometry,System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Boolean})">
      <summary>모든 점 값의 공통 부분을 나타내는 기하학적 개체를 반환합니다. 기하 도형 인스턴스에서 이 점의 거리는 지정한 값보다 작거나 같아야 합니다.</summary>
      <returns>기하학 인스턴스로부터의 거리가 지정된 값보다 작거나 같은 모든 점의 값을 결합한 것입니다.</returns>
      <param name="geometryValue">기하 도형 값입니다.</param>
      <param name="distance">거리입니다.</param>
      <param name="tolerance">지정된 허용치입니다.</param>
      <param name="relative">허용 오차 값이 상대적인지 절대적인지 지정합니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialFunctions.EnvelopeAngle(System.Data.Entity.Spatial.DbGeography)">
      <summary>EnvelopeCenter()에서 반환된 점과 지리 인스턴스의 점 사이의 최대 각도를 도 단위로 반환합니다.</summary>
      <returns>EnvelopeCenter()에서 반환된 점 사이의 최대 각도입니다.</returns>
      <param name="geographyValue">지리 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialFunctions.EnvelopeCenter(System.Data.Entity.Spatial.DbGeography)">
      <summary>지리 인스턴스의 경계 원 중심으로 사용할 수 있는 점을 반환합니다.</summary>
      <returns>경계 원의 중심 위치를 지정하는 SqlGeography 값입니다.</returns>
      <param name="geographyValue">지리 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialFunctions.Filter(System.Data.Entity.Spatial.DbGeography,System.Data.Entity.Spatial.DbGeography)">
      <summary>인덱스만 해당하는 신속한 교집합 메서드를 제공하여 인덱스가 사용 가능한 경우 지리 인스턴스가 다른 SqlGeography 인스턴스를 교차하는지 여부를 확인합니다.</summary>
      <returns>지리 인스턴스가 다른 SqlGeography 인스턴스와 교차할 수 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="geographyValue">지리 값입니다.</param>
      <param name="geographyOther">필터가 호출되는 인스턴스와 비교할 다른 지리 인스턴스입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialFunctions.Filter(System.Data.Entity.Spatial.DbGeometry,System.Data.Entity.Spatial.DbGeometry)">
      <summary>인덱스만 해당하는 신속한 교집합 메서드를 제공하여 인덱스가 사용 가능한 경우 지리 인스턴스가 다른 SqlGeometry 인스턴스를 교차하는지 여부를 확인합니다.</summary>
      <returns>지리 인스턴스가 다른 SqlGeography 인스턴스와 교차할 수 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="geometryValue">기하 도형 값입니다.</param>
      <param name="geometryOther">필터가 호출되는 인스턴스와 비교할 다른 지리 인스턴스입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialFunctions.InstanceOf(System.Data.Entity.Spatial.DbGeography,System.String)">
      <summary>SqlGeography 인스턴스가 지정된 형식과 같은지 테스트합니다.</summary>
      <returns>지리 형식 계층에 노출된 12가지 형식 중 하나를 지정하는 문자열입니다.</returns>
      <param name="geographyValue">지리 값입니다.</param>
      <param name="geometryTypeName">지리 형식 계층에 노출된 12가지 형식 중 하나를 지정하는 문자열입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialFunctions.InstanceOf(System.Data.Entity.Spatial.DbGeometry,System.String)">
      <summary>SqlGeometry 인스턴스가 지정된 형식과 같은지 테스트합니다.</summary>
      <returns>지리 형식 계층에 노출된 12가지 형식 중 하나를 지정하는 문자열입니다.</returns>
      <param name="geometryValue">기하 도형 값입니다.</param>
      <param name="geometryTypeName">지리 형식 계층에 노출된 12가지 형식 중 하나를 지정하는 문자열입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialFunctions.MakeValid(System.Data.Entity.Spatial.DbGeometry)">
      <summary>잘못된 기하 도형 인스턴스를 유효한 OGC(Open Geospatial Consortium) 형식의 기하 도형 인스턴스로 변환합니다.</summary>
      <returns>변환된 기하 도형 인스턴스입니다.</returns>
      <param name="geometryValue">기하 도형 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialFunctions.NumRings(System.Data.Entity.Spatial.DbGeography)">
      <summary>다각형 인스턴스의 전체 링 수를 반환합니다.</summary>
      <returns>전체 링 수입니다.</returns>
      <param name="geographyValue">지리 값입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialFunctions.PointGeography(System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Int32})">
      <summary>SRID(공간 참조 ID)와 x 및 y 값에서 Point 인스턴스를 나타내는 지리 인스턴스를 생성합니다.</summary>
      <returns>생성된 지리 인스턴스입니다.</returns>
      <param name="latitude">만드는 점의 X 좌표입니다.</param>
      <param name="longitude">만드는 점의 y 좌표입니다.</param>
      <param name="spatialReferenceId">지리 인스턴스의 SRID입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialFunctions.PointGeometry(System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Int32})">
      <summary>SRID(공간 참조 ID)와 x 및 y 값에서 Point 인스턴스를 나타내는 기하 도형 인스턴스를 생성합니다.</summary>
      <returns>생성된 기하 도형 인스턴스입니다.</returns>
      <param name="xCoordinate">만드는 점의 X 좌표입니다.</param>
      <param name="yCoordinate">만드는 점의 Y 좌표입니다.</param>
      <param name="spatialReferenceId">지리 인스턴스의 SRID입니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialFunctions.Reduce(System.Data.Entity.Spatial.DbGeography,System.Nullable{System.Double})">
      <summary>허용 오차가 지정된 인스턴스에서 Douglas-Peucker 알고리즘을 실행하여 생성된 지리 인스턴스의 근사치를 반환합니다.</summary>
      <returns>
        <see cref="T:System.Data.Entity.Spatial.DbGeography" />를 반환합니다.</returns>
      <param name="geographyValue">지리 값입니다.</param>
      <param name="tolerance">Douglas Peucker 알고리즘에 입력할 허용 범위입니다.허용 범위는 양수여야 합니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialFunctions.Reduce(System.Data.Entity.Spatial.DbGeometry,System.Nullable{System.Double})">
      <summary>허용 오차가 지정된 인스턴스에서 Douglas-Peucker 알고리즘을 실행하여 생성된 지리 인스턴스의 근사치를 반환합니다.</summary>
      <returns>
        <see cref="T:System.Data.Entity.Spatial.DbGeometry" />를 반환합니다.</returns>
      <param name="geometryValue">기하 도형 값입니다.</param>
      <param name="tolerance">Douglas Peucker 알고리즘에 입력할 허용 범위입니다.허용 범위는 양수여야 합니다.</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialFunctions.RingN(System.Data.Entity.Spatial.DbGeography,System.Nullable{System.Int32})">
      <summary>SqlGeography 인스턴스의 지정된 링 반환: 1 ≤ n ≤ NumRings().</summary>
      <returns>n으로 지정된 링을 나타내는 SqlGeography 개체입니다.</returns>
      <param name="geographyValue">지리 값입니다.</param>
      <param name="index">다각형 인스턴스에 있는 링 수와 1 사이의 정수 식입니다.</param>
    </member>
  </members>
</doc>